name: Go Build and Analyze with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod tidy

    - name: Run tests and generate coverage report
      run: |
        go test -coverprofile=coverage.out ./...

    - name: Check coverage report
      run: cat coverage.out

    - name: SonarCloud Analysis
      id: sonarcloud
      uses: sonarsource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=gomesmatheus_tc-cliente
          -Dsonar.organization=gomesmatheus
          -Dsonar.sources=cmd,delivery,domain,infraestructure,usecase
          -Dsonar.tests=.
          -Dsonar.exclusions=**/*
          -Dsonar.test.inclusions=**/*_test.go
          -Dsonar.go.coverage.reportPaths=coverage.out

    - name: Check Quality Gate
      run: |
        curl -u ${{ secrets.SONAR_TOKEN }}: \
          "https://sonarcloud.io/api/qualitygates/project_status?projectKey=gomesmatheus_tc-cliente" \
          | jq -e '.projectStatus.status == "OK"' > /dev/null
      shell: bash
