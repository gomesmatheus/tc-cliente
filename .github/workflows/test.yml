name: Go Build and Analyze with SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod tidy

    - name: Run tests and generate coverage report
      run: |
        go test -v ./... > result.log; tail -n 10 result.log
        go test -coverprofile=coverage.out ./... # This generates coverage.out

    - name: Upload coverage to SonarCloud
      uses: sonarsource/sonarcloud-github-action@v2
      with:
        sonarcloud_token: ${{ secrets.SONAR_TOKEN }}
        projectKey: 'gomesmatheus/tc-cliente'
        projectName: 'gomesmatheus_tc-cliente'

    - name: Analyze with SonarCloud
      run: |
        curl -sSLo sonar-scanner-cli.zip https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.8.0.2856/sonar-scanner-cli-4.8.0.2856-linux.zip
        unzip sonar-scanner-cli.zip -d sonar-scanner
        sonar-scanner/sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner \
          -Dsonar.projectKey=gomesmatheus_tc-cliente \
          -Dsonar.sources=./ \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.go.coverageReportPaths=coverage.out # Points to your coverage file
